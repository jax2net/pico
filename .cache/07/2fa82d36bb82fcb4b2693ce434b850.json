{"id":"node_modules/walk/lib/node-type-emitter.js","dependencies":[{"name":"/home/j/code/pico-game/package.json","includedInParent":true,"mtime":1650856783377},{"name":"/home/j/code/pico-game/node_modules/walk/package.json","includedInParent":true,"mtime":1650856782025}],"generated":{"js":"/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true*/\n(function () {\n  \"use strict\";\n\n  // \"FIFO\" isn't easy to convert to camelCase and back reliably\n  var isFnodeTypes = [\n      \"isFile\", \"isDirectory\",  \"isSymbolicLink\", \"isBlockDevice\",  \"isCharacterDevice\", \"isFIFO\", \"isSocket\"\n    ],\n    fnodeTypes = [\n      \"file\",   \"directory\",    \"symbolicLink\",   \"blockDevice\",    \"characterDevice\",    \"FIFO\",   \"socket\"\n    ],\n    fnodeTypesPlural = [\n      \"files\",  \"directories\",  \"symbolicLinks\",  \"blockDevices\",   \"characterDevices\",   \"FIFOs\",  \"sockets\"\n    ];\n\n\n  // \n  function createNodeGroups() {\n    var nodeGroups = {};\n    fnodeTypesPlural.concat(\"nodes\", \"errors\").forEach(function (fnodeTypePlural) {\n      nodeGroups[fnodeTypePlural] = [];\n    });\n    return nodeGroups;\n  }\n\n\n  // Determine each file node's type\n  // \n  function sortFnodesByType(stat, fnodes) {\n    var i, isType;\n\n    for (i = 0; i < isFnodeTypes.length; i += 1) {\n      isType = isFnodeTypes[i];\n      if (stat[isType]()) {\n        stat.type = fnodeTypes[i];\n        fnodes[fnodeTypesPlural[i]].push(stat);\n        return;\n      }\n    }\n  }\n\n\n  // Get the current number of listeners (which may change)\n  // Emit events to each listener\n  // Wait for all listeners to `next()` before continueing\n  // (in theory this may avoid disk thrashing)\n  function emitSingleEvents(emitter, path, stats, next, self) {\n    var num = 1 + emitter.listeners(stats.type).length + emitter.listeners(\"node\").length;\n\n    function nextWhenReady(flag) {\n      if (flag) {\n        stats.flag = flag;\n      }\n      num -= 1;\n      if (0 === num) { next.call(self); }\n    }\n\n    emitter.emit(stats.type, path, stats, nextWhenReady);\n    emitter.emit(\"node\", path, stats, nextWhenReady);\n    nextWhenReady();\n  }\n\n\n  // Since the risk for disk thrashing among anything\n  // other than files is relatively low, all types are\n  // emitted at once, but all must complete before advancing\n  function emitPluralEvents(emitter, path, nodes, next, self) {\n    var num = 1;\n\n    function nextWhenReady() {\n      num -= 1;\n      if (0 === num) { next.call(self); }\n    }\n\n    fnodeTypesPlural.concat([\"nodes\", \"errors\"]).forEach(function (fnodeType) {\n      if (0 === nodes[fnodeType].length) { return; }\n      num += emitter.listeners(fnodeType).length;\n      emitter.emit(fnodeType, path, nodes[fnodeType], nextWhenReady);\n    });\n    nextWhenReady();\n  }\n\n  module.exports = {\n    emitNodeType: emitSingleEvents,\n    emitNodeTypeGroups: emitPluralEvents,\n    isFnodeTypes: isFnodeTypes,\n    fnodeTypes: fnodeTypes,\n    fnodeTypesPlural: fnodeTypesPlural,\n    sortFnodesByType: sortFnodesByType,\n    createNodeGroups: createNodeGroups\n  };\n}());\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/walk/lib/node-type-emitter.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}}],"sources":{"node_modules/walk/lib/node-type-emitter.js":"/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true*/\n(function () {\n  \"use strict\";\n\n  // \"FIFO\" isn't easy to convert to camelCase and back reliably\n  var isFnodeTypes = [\n      \"isFile\", \"isDirectory\",  \"isSymbolicLink\", \"isBlockDevice\",  \"isCharacterDevice\", \"isFIFO\", \"isSocket\"\n    ],\n    fnodeTypes = [\n      \"file\",   \"directory\",    \"symbolicLink\",   \"blockDevice\",    \"characterDevice\",    \"FIFO\",   \"socket\"\n    ],\n    fnodeTypesPlural = [\n      \"files\",  \"directories\",  \"symbolicLinks\",  \"blockDevices\",   \"characterDevices\",   \"FIFOs\",  \"sockets\"\n    ];\n\n\n  // \n  function createNodeGroups() {\n    var nodeGroups = {};\n    fnodeTypesPlural.concat(\"nodes\", \"errors\").forEach(function (fnodeTypePlural) {\n      nodeGroups[fnodeTypePlural] = [];\n    });\n    return nodeGroups;\n  }\n\n\n  // Determine each file node's type\n  // \n  function sortFnodesByType(stat, fnodes) {\n    var i, isType;\n\n    for (i = 0; i < isFnodeTypes.length; i += 1) {\n      isType = isFnodeTypes[i];\n      if (stat[isType]()) {\n        stat.type = fnodeTypes[i];\n        fnodes[fnodeTypesPlural[i]].push(stat);\n        return;\n      }\n    }\n  }\n\n\n  // Get the current number of listeners (which may change)\n  // Emit events to each listener\n  // Wait for all listeners to `next()` before continueing\n  // (in theory this may avoid disk thrashing)\n  function emitSingleEvents(emitter, path, stats, next, self) {\n    var num = 1 + emitter.listeners(stats.type).length + emitter.listeners(\"node\").length;\n\n    function nextWhenReady(flag) {\n      if (flag) {\n        stats.flag = flag;\n      }\n      num -= 1;\n      if (0 === num) { next.call(self); }\n    }\n\n    emitter.emit(stats.type, path, stats, nextWhenReady);\n    emitter.emit(\"node\", path, stats, nextWhenReady);\n    nextWhenReady();\n  }\n\n\n  // Since the risk for disk thrashing among anything\n  // other than files is relatively low, all types are\n  // emitted at once, but all must complete before advancing\n  function emitPluralEvents(emitter, path, nodes, next, self) {\n    var num = 1;\n\n    function nextWhenReady() {\n      num -= 1;\n      if (0 === num) { next.call(self); }\n    }\n\n    fnodeTypesPlural.concat([\"nodes\", \"errors\"]).forEach(function (fnodeType) {\n      if (0 === nodes[fnodeType].length) { return; }\n      num += emitter.listeners(fnodeType).length;\n      emitter.emit(fnodeType, path, nodes[fnodeType], nextWhenReady);\n    });\n    nextWhenReady();\n  }\n\n  module.exports = {\n    emitNodeType: emitSingleEvents,\n    emitNodeTypeGroups: emitPluralEvents,\n    isFnodeTypes: isFnodeTypes,\n    fnodeTypes: fnodeTypes,\n    fnodeTypesPlural: fnodeTypesPlural,\n    sortFnodesByType: sortFnodesByType,\n    createNodeGroups: createNodeGroups\n  };\n}());\n"},"lineCount":93}},"error":null,"hash":"7abbff203e91f2f4c9bab629f8c234ad","cacheData":{"env":{}}}